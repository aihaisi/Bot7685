import re
from dataclasses import dataclass


@dataclass
class WplacePixelCoords:
    # each tile contains 1000x1000 pixels, from 0 to 999
    tlx: int  # tile X
    tly: int  # tile Y
    pxx: int  # pixel X
    pxy: int  # pixel Y


def fix_coords(
    coord1: WplacePixelCoords,
    coord2: WplacePixelCoords,
) -> tuple[WplacePixelCoords, WplacePixelCoords]:
    x1, x2 = sorted((coord1.tlx * 1000 + coord1.pxx, coord2.tlx * 1000 + coord2.pxx))
    y1, y2 = sorted((coord1.tly * 1000 + coord1.pxy, coord2.tly * 1000 + coord2.pxy))
    return (
        WplacePixelCoords(x1 // 1000, y1 // 1000, x1 % 1000, y1 % 1000),
        WplacePixelCoords(x2 // 1000, y2 // 1000, x2 % 1000, y2 % 1000),
    )


def get_all_tile_coords(
    coord1: WplacePixelCoords,
    coord2: WplacePixelCoords,
) -> list[tuple[int, int]]:
    coord1, coord2 = fix_coords(coord1, coord2)
    return [
        (x, y)
        for x in range(coord1.tlx, coord2.tlx + 1)
        for y in range(coord1.tly, coord2.tly + 1)
    ]


def get_size(
    coord1: WplacePixelCoords,
    coord2: WplacePixelCoords,
) -> tuple[int, int]:
    coord1, coord2 = fix_coords(coord1, coord2)
    width = (coord2.tlx - coord1.tlx) * 1000 + (coord2.pxx - coord1.pxx) + 1
    height = (coord2.tly - coord1.tly) * 1000 + (coord2.pxy - coord1.pxy) + 1
    return width, height


BLUE_MARBLE_COORDS_PATTERN = re.compile(
    r".+?Tl X: (\d+), Tl Y: (\d+), Px X: (\d+), Px Y: (\d+).+?"
)


def parse_coords(s: str) -> WplacePixelCoords:
    if not (m := BLUE_MARBLE_COORDS_PATTERN.match(s)):
        raise ValueError(f"Invalid coords: {s}")
    return WplacePixelCoords(int(m[1]), int(m[2]), int(m[3]), int(m[4]))


FLAG_MAPPING = {
    1: "ðŸ‡¦ðŸ‡«",
    2: "ðŸ‡¦ðŸ‡±",
    3: "ðŸ‡©ðŸ‡¿",
    4: "ðŸ‡¦ðŸ‡¸",
    5: "ðŸ‡¦ðŸ‡©",
    6: "ðŸ‡¦ðŸ‡´",
    7: "ðŸ‡¦ðŸ‡®",
    8: "ðŸ‡¦ðŸ‡¶",
    9: "ðŸ‡¦ðŸ‡¬",
    10: "ðŸ‡¦ðŸ‡·",
    11: "ðŸ‡¦ðŸ‡²",
    12: "ðŸ‡¦ðŸ‡¼",
    13: "ðŸ‡¦ðŸ‡º",
    14: "ðŸ‡¦ðŸ‡¹",
    15: "ðŸ‡¦ðŸ‡¿",
    16: "ðŸ‡§ðŸ‡¸",
    17: "ðŸ‡§ðŸ‡­",
    18: "ðŸ‡§ðŸ‡©",
    19: "ðŸ‡§ðŸ‡§",
    20: "ðŸ‡§ðŸ‡¾",
    21: "ðŸ‡§ðŸ‡ª",
    22: "ðŸ‡§ðŸ‡¿",
    23: "ðŸ‡§ðŸ‡¯",
    24: "ðŸ‡§ðŸ‡²",
    25: "ðŸ‡§ðŸ‡¹",
    26: "ðŸ‡§ðŸ‡´",
    27: "ðŸ‡§ðŸ‡¶",
    28: "ðŸ‡§ðŸ‡¦",
    29: "ðŸ‡§ðŸ‡¼",
    30: "ðŸ‡§ðŸ‡»",
    31: "ðŸ‡§ðŸ‡·",
    32: "ðŸ‡®ðŸ‡´",
    33: "ðŸ‡§ðŸ‡³",
    34: "ðŸ‡§ðŸ‡¬",
    35: "ðŸ‡§ðŸ‡«",
    36: "ðŸ‡§ðŸ‡®",
    37: "ðŸ‡¨ðŸ‡»",
    38: "ðŸ‡°ðŸ‡­",
    39: "ðŸ‡¨ðŸ‡²",
    40: "ðŸ‡¨ðŸ‡¦",
    41: "ðŸ‡°ðŸ‡¾",
    42: "ðŸ‡¨ðŸ‡«",
    43: "ðŸ‡¹ðŸ‡©",
    44: "ðŸ‡¨ðŸ‡±",
    45: "ðŸ‡¨ðŸ‡³",
    46: "ðŸ‡¨ðŸ‡½",
    47: "ðŸ‡¨ðŸ‡¨",
    48: "ðŸ‡¨ðŸ‡´",
    49: "ðŸ‡°ðŸ‡²",
    50: "ðŸ‡¨ðŸ‡¬",
    51: "ðŸ‡¨ðŸ‡°",
    52: "ðŸ‡¨ðŸ‡·",
    53: "ðŸ‡­ðŸ‡·",
    54: "ðŸ‡¨ðŸ‡º",
    55: "ðŸ‡¨ðŸ‡¼",
    56: "ðŸ‡¨ðŸ‡¾",
    57: "ðŸ‡¨ðŸ‡¿",
    58: "ðŸ‡¨ðŸ‡®",
    59: "ðŸ‡©ðŸ‡°",
    60: "ðŸ‡©ðŸ‡¯",
    61: "ðŸ‡©ðŸ‡²",
    62: "ðŸ‡©ðŸ‡´",
    63: "ðŸ‡ªðŸ‡¨",
    64: "ðŸ‡ªðŸ‡¬",
    65: "ðŸ‡¸ðŸ‡»",
    66: "ðŸ‡¬ðŸ‡¶",
    67: "ðŸ‡ªðŸ‡·",
    68: "ðŸ‡ªðŸ‡ª",
    69: "ðŸ‡¸ðŸ‡¿",
    70: "ðŸ‡ªðŸ‡¹",
    71: "ðŸ‡«ðŸ‡°",
    72: "ðŸ‡«ðŸ‡´",
    73: "ðŸ‡«ðŸ‡¯",
    74: "ðŸ‡«ðŸ‡®",
    75: "ðŸ‡«ðŸ‡·",
    76: "ðŸ‡¬ðŸ‡«",
    77: "ðŸ‡µðŸ‡«",
    78: "ðŸ‡¹ðŸ‡«",
    79: "ðŸ‡¬ðŸ‡¦",
    80: "ðŸ‡¬ðŸ‡²",
    81: "ðŸ‡¬ðŸ‡ª",
    82: "ðŸ‡©ðŸ‡ª",
    83: "ðŸ‡¬ðŸ‡­",
    84: "ðŸ‡¬ðŸ‡®",
    85: "ðŸ‡¬ðŸ‡·",
    86: "ðŸ‡¬ðŸ‡±",
    87: "ðŸ‡¬ðŸ‡©",
    88: "ðŸ‡¬ðŸ‡µ",
    89: "ðŸ‡¬ðŸ‡º",
    90: "ðŸ‡¬ðŸ‡¹",
    91: "ðŸ‡¬ðŸ‡¬",
    92: "ðŸ‡¬ðŸ‡³",
    93: "ðŸ‡¬ðŸ‡¼",
    94: "ðŸ‡¬ðŸ‡¾",
    95: "ðŸ‡­ðŸ‡¹",
    96: "ðŸ‡­ðŸ‡²",
    97: "ðŸ‡­ðŸ‡³",
    98: "ðŸ‡­ðŸ‡°",
    99: "ðŸ‡­ðŸ‡º",
    100: "ðŸ‡®ðŸ‡¸",
    101: "ðŸ‡®ðŸ‡³",
    102: "ðŸ‡®ðŸ‡©",
    103: "ðŸ‡®ðŸ‡·",
    104: "ðŸ‡®ðŸ‡¶",
    105: "ðŸ‡®ðŸ‡ª",
    106: "ðŸ‡®ðŸ‡²",
    107: "ðŸ‡®ðŸ‡±",
    108: "ðŸ‡®ðŸ‡¹",
    109: "ðŸ‡¯ðŸ‡²",
    110: "ðŸ‡¯ðŸ‡µ",
    111: "ðŸ‡¯ðŸ‡ª",
    112: "ðŸ‡¯ðŸ‡´",
    113: "ðŸ‡°ðŸ‡¿",
    114: "ðŸ‡°ðŸ‡ª",
    115: "ðŸ‡°ðŸ‡®",
    116: "ðŸ‡½ðŸ‡°",
    117: "ðŸ‡°ðŸ‡¼",
    118: "ðŸ‡°ðŸ‡¬",
    119: "ðŸ‡±ðŸ‡¦",
    120: "ðŸ‡±ðŸ‡»",
    121: "ðŸ‡±ðŸ‡§",
    122: "ðŸ‡±ðŸ‡¸",
    123: "ðŸ‡±ðŸ‡·",
    124: "ðŸ‡±ðŸ‡¾",
    125: "ðŸ‡±ðŸ‡®",
    126: "ðŸ‡±ðŸ‡¹",
    127: "ðŸ‡±ðŸ‡º",
    128: "ðŸ‡²ðŸ‡´",
    129: "ðŸ‡²ðŸ‡¬",
    130: "ðŸ‡²ðŸ‡¼",
    131: "ðŸ‡²ðŸ‡¾",
    132: "ðŸ‡²ðŸ‡»",
    133: "ðŸ‡²ðŸ‡±",
    134: "ðŸ‡²ðŸ‡¹",
    135: "ðŸ‡²ðŸ‡­",
    136: "ðŸ‡²ðŸ‡¶",
    137: "ðŸ‡²ðŸ‡·",
    138: "ðŸ‡²ðŸ‡º",
    139: "ðŸ‡¾ðŸ‡¹",
    140: "ðŸ‡²ðŸ‡½",
    141: "ðŸ‡«ðŸ‡²",
    142: "ðŸ‡²ðŸ‡©",
    143: "ðŸ‡²ðŸ‡¨",
    144: "ðŸ‡²ðŸ‡³",
    145: "ðŸ‡²ðŸ‡ª",
    146: "ðŸ‡²ðŸ‡¸",
    147: "ðŸ‡²ðŸ‡¦",
    148: "ðŸ‡²ðŸ‡¿",
    149: "ðŸ‡²ðŸ‡²",
    150: "ðŸ‡³ðŸ‡¦",
    151: "ðŸ‡³ðŸ‡·",
    152: "ðŸ‡³ðŸ‡µ",
    153: "ðŸ‡³ðŸ‡±",
    154: "ðŸ‡³ðŸ‡¨",
    155: "ðŸ‡³ðŸ‡¿",
    156: "ðŸ‡³ðŸ‡®",
    157: "ðŸ‡³ðŸ‡ª",
    158: "ðŸ‡³ðŸ‡¬",
    159: "ðŸ‡³ðŸ‡º",
    160: "ðŸ‡³ðŸ‡«",
    161: "ðŸ‡°ðŸ‡µ",
    162: "ðŸ‡²ðŸ‡°",
    163: "ðŸ‡²ðŸ‡µ",
    164: "ðŸ‡³ðŸ‡´",
    165: "ðŸ‡´ðŸ‡²",
    166: "ðŸ‡µðŸ‡°",
    167: "ðŸ‡µðŸ‡¼",
    168: "ðŸ‡µðŸ‡¸",
    169: "ðŸ‡µðŸ‡¦",
    170: "ðŸ‡µðŸ‡¬",
    171: "ðŸ‡µðŸ‡¾",
    172: "ðŸ‡µðŸ‡ª",
    173: "ðŸ‡µðŸ‡­",
    174: "ðŸ‡µðŸ‡³",
    175: "ðŸ‡µðŸ‡±",
    176: "ðŸ‡µðŸ‡¹",
    177: "ðŸ‡µðŸ‡·",
    178: "ðŸ‡¶ðŸ‡¦",
    179: "ðŸ‡¨ðŸ‡©",
    180: "ðŸ‡·ðŸ‡´",
    181: "ðŸ‡·ðŸ‡º",
    182: "ðŸ‡·ðŸ‡¼",
    183: "ðŸ‡·ðŸ‡ª",
    184: "ðŸ‡§ðŸ‡±",
    185: "ðŸ‡¸ðŸ‡­",
    186: "ðŸ‡°ðŸ‡³",
    187: "ðŸ‡±ðŸ‡¨",
    188: "ðŸ‡²ðŸ‡«",
    189: "ðŸ‡µðŸ‡²",
    190: "ðŸ‡»ðŸ‡¨",
    191: "ðŸ‡¼ðŸ‡¸",
    192: "ðŸ‡¸ðŸ‡²",
    193: "ðŸ‡¸ðŸ‡¹",
    194: "ðŸ‡¸ðŸ‡¦",
    195: "ðŸ‡¸ðŸ‡³",
    196: "ðŸ‡·ðŸ‡¸",
    197: "ðŸ‡¸ðŸ‡¨",
    198: "ðŸ‡¸ðŸ‡±",
    199: "ðŸ‡¸ðŸ‡¬",
    200: "ðŸ‡¸ðŸ‡½",
    201: "ðŸ‡¸ðŸ‡°",
    202: "ðŸ‡¸ðŸ‡®",
    203: "ðŸ‡¸ðŸ‡§",
    204: "ðŸ‡¸ðŸ‡´",
    205: "ðŸ‡¿ðŸ‡¦",
    206: "ðŸ‡¬ðŸ‡¸",
    207: "ðŸ‡°ðŸ‡·",
    208: "ðŸ‡¸ðŸ‡¸",
    209: "ðŸ‡ªðŸ‡¸",
    210: "ðŸ‡±ðŸ‡°",
    211: "ðŸ‡¸ðŸ‡©",
    212: "ðŸ‡¸ðŸ‡·",
    213: "ðŸ‡¸ðŸ‡¯",
    214: "ðŸ‡¸ðŸ‡ª",
    215: "ðŸ‡¨ðŸ‡­",
    216: "ðŸ‡¸ðŸ‡¾",
    217: "ðŸ‡¹ðŸ‡¼",
    218: "ðŸ‡¹ðŸ‡¯",
    219: "ðŸ‡¹ðŸ‡¿",
    220: "ðŸ‡¹ðŸ‡­",
    221: "ðŸ‡¹ðŸ‡±",
    222: "ðŸ‡¹ðŸ‡¬",
    223: "ðŸ‡¹ðŸ‡°",
    224: "ðŸ‡¹ðŸ‡´",
    225: "ðŸ‡¹ðŸ‡¹",
    226: "ðŸ‡¹ðŸ‡³",
    227: "ðŸ‡¹ðŸ‡²",
    228: "ðŸ‡¹ðŸ‡¨",
    229: "ðŸ‡¹ðŸ‡»",
    230: "ðŸ‡¹ðŸ‡·",
    231: "ðŸ‡ºðŸ‡¬",
    232: "ðŸ‡ºðŸ‡¦",
    233: "ðŸ‡¦ðŸ‡ª",
    234: "ðŸ‡¬ðŸ‡§",
    235: "ðŸ‡ºðŸ‡¸",
    236: "ðŸ‡ºðŸ‡²",
    237: "ðŸ‡ºðŸ‡¾",
    238: "ðŸ‡ºðŸ‡¿",
    239: "ðŸ‡»ðŸ‡º",
    240: "ðŸ‡»ðŸ‡¦",
    241: "ðŸ‡»ðŸ‡ª",
    242: "ðŸ‡»ðŸ‡³",
    243: "ðŸ‡»ðŸ‡¬",
    244: "ðŸ‡»ðŸ‡®",
    245: "ðŸ‡¼ðŸ‡«",
    246: "ðŸ‡ªðŸ‡­",
    247: "ðŸ‡¾ðŸ‡ª",
    248: "ðŸ‡¿ðŸ‡²",
    249: "ðŸ‡¿ðŸ‡¼",
    250: "ðŸ‡¦ðŸ‡½",
    251: "ðŸ‡®ðŸ‡¨",
}


def get_flag_emoji(id: int) -> str:
    return FLAG_MAPPING.get(id, "")
